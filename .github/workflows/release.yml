name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:  
        fetch-depth: 0
      
    - name: GitVersion
      run: | 
        dotnet tool install --global GitVersion.Tool --version 5.6.4
        dotnet gitversion /output buildserver

      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
#    - name: Build
#      run: dotnet build --no-restore
#    - name: Test
#      run: dotnet test --no-build --verbosity normal


    - name: Build Library
      run: dotnet pack .\src\DiceTool -o publish/ -p:PackageVersion=${{ env.GitVersion_FullSemVer }}
    - name: Build Parser
      run: dotnet pack .\src\DiceTool.Parser -o publish/ -p:PackageVersion=${{ env.GitVersion_FullSemVer }}
  
    - name: Build X64
      run: dotnet publish src/DiceTool.Ui --runtime win-x64 --configuration Release --self-contained true -o publish/x64
    - name: Build X86
      run: dotnet publish src/DiceTool.Ui --runtime win-x86 --configuration Release --self-contained true -o publish/x86
    - name: Build Framework Dependent (Net 5.0)
      run: dotnet publish src/DiceTool.Ui --framework net5.0-windows --configuration Release --self-contained false -o publish/net5.0

    - name: Pack X64
      run: compress-archive publish/x64 publish/DiceTool-${{ env.GitVersion_FullSemVer }}-x64.zip
    - name: Pack X86
      run: compress-archive publish/x64 publish/DiceTool-${{ env.GitVersion_FullSemVer }}-x86.zip
    - name: Pack Framework Dependent (Net 5.0)
      run: compress-archive publish/x64 publish/DiceTool-${{ env.GitVersion_FullSemVer }}-net5.0.zip         
      
    - name: Create Release
      uses: actions/create-release@v1.1.4
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{ github.ref }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Release ${{ github.ref }}

    - name: Upload Release Asset x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./publish/DiceTool-${{ env.GitVersion_FullSemVer }}-x64.zip
        asset_name: publish/DiceTool-${{ env.GitVersion_FullSemVer }}-x64
        asset_content_type: application/x-compressed

    - name: Upload Release Asset x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./publish/DiceTool-${{ env.GitVersion_FullSemVer }}-x86.zip
        asset_name: publish/DiceTool-${{ env.GitVersion_FullSemVer }}-x86
        asset_content_type: application/x-compressed

    - name: Upload Release Asset .Net 5.0
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./publish/DiceTool-${{ env.GitVersion_FullSemVer }}-net5.0.zip
        asset_name: publish/DiceTool-${{ env.GitVersion_FullSemVer }}-net5.0
        asset_content_type: application/x-compressed

    - name: Publish Nuget Packages
      run: |
        dotnet nuget push ./publish/DiceTool.${{ env.GitVersion_FullSemVer }}.nupkg -k ${{ secrets.NUGETAPIKEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push ./publish/DiceTool.${{ env.GitVersion_FullSemVer }}.symbols.nupkg -k ${{ secrets.NUGETAPIKEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push ./publish/DiceTool.Parser.${{ env.GitVersion_FullSemVer }}.nupkg -k ${{ secrets.NUGETAPIKEY }} -s https://api.nuget.org/v3/index.json
        dotnet nuget push ./publish/DiceTool.Parser.${{ env.GitVersion_FullSemVer }}.symbols.nupkg -k ${{ secrets.NUGETAPIKEY }} -s https://api.nuget.org/v3/index.json
      
          
